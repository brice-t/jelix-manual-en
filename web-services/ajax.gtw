~~LANG:FR@frman:services-web/ajax~~

Although Ajax means an XML response (X in AJAX), it is commonly used with other formats.

Depending on the client waiting either @@P@responseText@@ or @@P@responseXml@@ of an @@C@XmlHttpRequest@@ object, you should use differents jelix response types. 

  * for any generic XML content, you will use [[/views/view-xml|jResponseXml]]
  * for json encoded content, you will use [[json|jResponseJson]]
  * for html fragments, beware you must **NOT**  use @@C@jResponseHtml@@, but @@C@jResponseHtmlFragment@@ (see example below).
  * Or, in other cases, you would use [[/views/view-text|jResponseText]].


In your controller, you can use @@jApp::coord()->request->isAjax()@@ to verify that the request is a true AJAX request (eg, made with XMLHttpRequest).

===== Sending HTML fragments =====

You can't use @@C@jResponseHtml@@ as it always generates a full well-formed HTML with @@E@<html>@@,@@E@<head>@@ and @@E@<body>@@... This is not what we want within an AJAX transaction.

@@C@jResponseHtmlFragment@@ will serve your needs here:

<code php>
   $resp = $this->getResponse('htmlfragment');
   $myvariable = ...

   // html to send
   $resp->addContent( '<p>'.$myvariable.'</p>' );

   // or with a template: 
   $resp->tplname ='myapp~tpl_for_ajax'; 
   $resp->tpl->assign('variable', $myvariable);

   return $resp;
</code>


==== Note about the use of jforms in an ajax response ====

If you want to include a jforms form inside an ajax response, you have to remember the following. 

jForms builders try to include additionnal CSS stylesheets and javascript files in the response. Unfortunately, AJAX responses does not support such features. 

You must then include those additional scripts and stylesheets, manually, in the response which initiated the AJAX call.

