~~LANG:FR@//fr/manuel-1.3/surcharge-de-fichiers~~

A Jelix application can make use of third-party module. But certainly, you will need to customize it more or less. Still, it would be a pain to modify its code directly. Jelix offers a way to overload the module files. As a result, any update of the module will be transparent and won't revert your modifications. 


Module files you can overload :

   * templates through [[themes|theme]] system
   * [[locales|localization]] files
   * [[daos|Dao]] files
   * [[/forms|Form]] files

As for templates, see [[themes|theme system]] description. If you haven't configure your themes, then the default one is active. You only need to put your modified files in @@F@var/themes/default@@. 

Other files needs to be located under @@F@var/overloads/<module_name_to_overload>/@@. 
Say you want to overload //example// module.

  * daos will be located under @@F@var/overloads/example/daos/@@
  * forms will be located under @@F@var/overloads/example/forms/@@
  * locales will be located under @@F@var/overloads/example/locales/@@


Filenames must be equivalent to their original copy. And in the case of dao, you shoud respect its original api, ie, keep all methods defined in the original.

Any overloaded files respecting those criterias will automatically be loaded by Jelix and used instead of its original copy.
